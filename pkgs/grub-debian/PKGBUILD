## "1" to enable EMU build, "0" to disable
_GRUB_EMU_BUILD="0"

[[ "${CARCH}" == 'x86_64' ]] && _EFI_ARCH='x86_64' && _EMU_ARCH='x86_64'

pkgname=grub-debian-git
pkgdesc='GNU GRand Unified Bootloader (2)'
epoch=2
_tag=2.12_rc1-11
_pkgver=${_pkgver/-/.}
pkgver=${_pkgver/_/}
pkgrel=1
url="https://salsa.debian.org/grub-team/grub"
arch=('x86_64')
license=('GPL3')
backup=('etc/default/grub'
        'etc/grub.d/40_custom')
options=('!makeflags')
conflicts=('grub-common' 'grub-bios' 'grub-emu' "grub-efi-${_EFI_ARCH}" 'grub-legacy')
replaces=('grub-common' 'grub-bios' 'grub-emu' "grub-efi-${_EFI_ARCH}")
provides=('grub-common' 'grub-bios' 'grub-emu' "grub-efi-${_EFI_ARCH}")

makedepends=('git' 'rsync' 'xz' 'freetype2' 'ttf-dejavu' 'python' 'autogen'
             'texinfo' 'help2man' 'gettext' 'device-mapper' 'fuse3')
depends=('sh' 'xz' 'gettext' 'device-mapper')
optdepends=('freetype2: For grub-mkfont usage'
            'fuse3: For grub-mount usage'
            'dosfstools: For grub-mkrescue FAT FS and EFI support'
            'lzop: For grub-mkrescue LZO support'
            'efibootmgr: For grub-install EFI support'
            'libisoburn: Provides xorriso for generating grub rescue iso using grub-mkrescue'
            'os-prober: To detect other OSes when generating grub.cfg in BIOS systems'
            'mtools: For grub-mkrescue FAT FS support')

if [[ "${_GRUB_EMU_BUILD}" == "1" ]]; then
    makedepends+=('libusbx' 'sdl')
    optdepends+=('libusbx: For grub-emu USB support'
                 'sdl: For grub-emu SDL support')
fi

#source=("${pkgname%-git}.tar.gz::${url}/-/archive/debian/${_tag}/${pkgname%-git}-${_tag}.tar.gz")
#sha256sums=('SKIP')

source=('grub.default')
sha256sums=('7df3f5cb5df7d2dfb17f4c9b5c5dedc9519ddce6f8d2c6cd43d1be17cecb65cb')

_configure_options=(
    PACKAGE_VERSION="${epoch}:${pkgver}-${pkgrel}"
    FREETYPE="pkg-config freetype2"
    BUILD_FREETYPE="pkg-config freetype2"
    --enable-nls
    --enable-device-mapper
    --enable-cache-stats
    --enable-grub-mkfont
    --enable-grub-mount
    --prefix="/usr"
    --bindir="/usr/bin"
    --sbindir="/usr/bin"
    --mandir="/usr/share/man"
    --infodir="/usr/share/info"
    --datarootdir="/usr/share"
    --sysconfdir="/etc"
    --program-prefix=""
    --with-bootdir="/boot"
    --with-grubdir="grub"
    --disable-silent-rules
    --disable-werror
)

prepare() {
  cd ${srcdir}
  git clone --shallow ${url}.git ${pkgname%-git}
  cd ${pkgname%-git}

  patchdir="${srcdir}/${pkgname%-git}/debian/patches"
  for patchname in $(cat $patchdir/series);do
    patch -p1 < $patchdir/$patchname
  done

  sed 's#@DEB_VERSION@#%PKGVER%#g;s#@UPSTREAM_VERSION@#%PKGVER%#g;$agrub.arch,1,Arch Linux,grub,%PKGVER%,https://archlinux.org/packages/core/x86_64/grub/' "${srcdir}/${pkgname%-git}/debian/sbat.debian.csv.in" > "${srcdir}/sbat.csv"

  echo "Fix DejaVuSans.ttf location so that grub-mkfont can create *.pf2 files for starfield theme..."
  sed 's|/usr/share/fonts/dejavu|/usr/share/fonts/dejavu /usr/share/fonts/TTF|g' -i "configure.ac"

  echo "Fix mkinitcpio 'rw' FS#36275..."
  sed 's| ro | rw |g' -i "util/grub.d/10_linux.in"

  echo "Fix OS naming FS#33393..."
  sed 's|GNU/Linux|Linux|' -i "util/grub.d/10_linux.in"

}

build() {
  CFLAGS="${CFLAGS/-O2/-O3} -fno-semantic-interposition"
  LDFLAGS+=" -Wl,-Bsymbolic-functions"

  arch-meson $pkgname build \
    -D egl_device=true \
    -D wayland_eglstream=true \
    -D installed_tests=false
  meson compile -C build
}

_check() (
  mkdir -p -m 700 "${XDG_RUNTIME_DIR:=$PWD/runtime-dir}"
  glib-compile-schemas "${GSETTINGS_SCHEMA_DIR:=$PWD/build/data}"
  export XDG_RUNTIME_DIR GSETTINGS_SCHEMA_DIR

  pipewire &
  _p1=$!

  wireplumber &
  _p2=$!

  trap "kill $_p1 $_p2; wait" EXIT

  meson test -C build --print-errorlogs -t 3
)

check() {
  dbus-run-session xvfb-run -s '-nolisten local +iglx -noreset' \
    bash -c "$(declare -f _check); _check"
}

package() {
  meson install -C build --destdir "$pkgdir"
}

